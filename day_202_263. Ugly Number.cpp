/*
263. Ugly Number
Solved
Easy
Topics
Companies
An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.

Given an integer n, return true if n is an ugly number.

 

Example 1:

Input: n = 6
Output: true
Explanation: 6 = 2 Ã— 3
Example 2:

Input: n = 1
Output: true
Explanation: 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.
Example 3:

Input: n = 14
Output: false
Explanation: 14 is not ugly since it includes the prime factor 7.
 

Constraints:

-231 <= n <= 231 - 1
*/

/*
Intuition:
- An "ugly number" is a number whose prime factors are limited to 2, 3, and 5. This means that an ugly number can be generated by multiplying any combination of these prime numbers.
- The strategy to determine if a number `n` is ugly is to repeatedly divide it by 2, 3, or 5 as long as it is divisible by these numbers.
- If after dividing by 2, 3, or 5, the resulting number becomes 1, then `n` is an ugly number.
- If the number becomes less than or equal to 0 or cannot be divided further by 2, 3, or 5 without leaving a remainder, then it is not an ugly number.

Time Complexity:
- The time complexity is O(log n) in the worst case, where `n` is divisible by a combination of 2, 3, or 5. Each division step reduces the size of `n` significantly.

Space Complexity:
- The space complexity is O(1) since we only use a fixed amount of space for variables.

*/

class Solution {
public:
    bool isUgly(int n) {
        // An ugly number must be positive.
        if (n <= 0) return false;

        // Continuously divide n by 2, 3, or 5 if possible.
        while(n > 1) {
            if(n % 2 == 0) n /= 2;
            else if(n % 3 == 0) n /= 3;
            else if(n % 5 == 0) n /= 5;
            else return false;
        }

        // If n becomes 1, it is an ugly number.
        return n == 1;
    }
};
